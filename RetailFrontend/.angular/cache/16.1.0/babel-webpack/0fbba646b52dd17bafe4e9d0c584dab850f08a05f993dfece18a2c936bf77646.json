{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/data-gateway.service\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nclass LoginComponent {\n  constructor(http, router, dataService) {\n    this.http = http;\n    this.router = router;\n    this.dataService = dataService;\n  }\n  onSubmit() {\n    if (!this.email || !this.password) {\n      //alert('Missing email or password.')\n      this.errorMessage = \"Missing email or password.\";\n      setTimeout(() => {\n        this.errorMessage = undefined;\n      }, 2000);\n      return;\n    }\n    let bodyData = {\n      email: this.email,\n      password: this.password\n    };\n    console.log(bodyData);\n    this.dataService.getLoginStatus(bodyData);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.DataGatewayService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 16,\n  vars: 6,\n  consts: [[1, \"login-container\"], [1, \"login-page\", \"p-4\", \"mt-5\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"InputEmail1\", 1, \"form-label\", \"mt-4\"], [\"type\", \"email\", \"id\", \"InputEmail1\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Enter email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"for\", \"InputPassword1\", 1, \"form-label\", \"mt-4\"], [\"type\", \"password\", \"id\", \"InputPassword1\", \"placeholder\", \"Password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"my-4\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"fieldset\")(4, \"legend\");\n      i0.ɵɵtext(5, \"LOGIN\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 6);\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"button\", 8);\n      i0.ɵɵtext(15, \"Login\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.email)(\"ngModelOptions\", i0.ɵɵpureFunction0(4, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password)(\"ngModelOptions\", i0.ɵɵpureFunction0(5, _c0));\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\".login-container[_ngcontent-%COMP%]{\\n    display: flex;\\n    justify-content: center;\\n    background-color: rgb(33, 37, 41);\\n    min-height: 100vh;\\n}\\n\\n.login-page[_ngcontent-%COMP%] {\\n    background-color: white;\\n    width: 30%;\\n    min-width: 250px;    \\n    border: 5px;\\n    border-color: rgb(33, 37, 41);;\\n    max-height: 400px;\\n    border-radius: 15px;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixpQ0FBaUM7SUFDakMsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLFVBQVU7SUFDVixnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLDZCQUE2QjtJQUM3QixpQkFBaUI7SUFDakIsbUJBQW1CO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRhaW5lcntcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigzMywgMzcsIDQxKTtcclxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG59XHJcblxyXG4ubG9naW4tcGFnZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICBtaW4td2lkdGg6IDI1MHB4OyAgICBcclxuICAgIGJvcmRlcjogNXB4O1xyXG4gICAgYm9yZGVyLWNvbG9yOiByZ2IoMzMsIDM3LCA0MSk7O1xyXG4gICAgbWF4LWhlaWdodDogNDAwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["LoginComponent","constructor","http","router","dataService","onSubmit","email","password","errorMessage","setTimeout","undefined","bodyData","console","log","getLoginStatus","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","i3","DataGatewayService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_2_listener","ɵɵtext","ɵɵelementEnd","LoginComponent_Template_input_ngModelChange_9_listener","$event","LoginComponent_Template_input_ngModelChange_13_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["C:\\GenSpark\\RetailOrder W13-14\\CaseStudyW13-14\\RetailFrontend\\src\\app\\components\\login\\login.component.ts","C:\\GenSpark\\RetailOrder W13-14\\CaseStudyW13-14\\RetailFrontend\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router'; \r\nimport { LoginInfo } from '../../services/LoginInfo';\r\nimport { DataGatewayService } from '../../services/data-gateway.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  email!: string; \r\n  password!: string;\r\n  errorMessage:undefined|string;\r\n\r\n  constructor(private http: HttpClient, private router: Router, private dataService: DataGatewayService){}\r\n\r\n  onSubmit() {\r\n    if (!this.email || !this.password) {\r\n      //alert('Missing email or password.')\r\n      this.errorMessage=\"Missing email or password.\";\r\n      setTimeout(() => {\r\n        this.errorMessage=undefined;\r\n      }, 2000);\r\n      return;\r\n    }\r\n\r\n    \r\n    \r\n    let bodyData: LoginInfo = {\r\n      email: this.email,\r\n      password: this.password,\r\n    };\r\n\r\n    console.log(bodyData);\r\n    \r\n    this.dataService.getLoginStatus(bodyData);\r\n  }\r\n\r\n}\r\n","<div class=\"login-container\">\r\n    <div class=\"login-page p-4 mt-5\">\r\n        <form (ngSubmit)= \"onSubmit()\">\r\n            <fieldset>\r\n              <legend>LOGIN</legend>\r\n              <div class=\"form-group\">\r\n                <label for=\"InputEmail1\" class=\"form-label mt-4\">Email address</label>\r\n                <input type=\"email\" [(ngModel)]=\"email\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" id=\"InputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"InputPassword1\" class=\"form-label mt-4\">Password</label>\r\n                <input type=\"password\" [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" id=\"InputPassword1\" placeholder=\"Password\">\r\n              </div>\r\n              \r\n              <button type=\"submit\" class=\"btn btn-primary my-4\">Login</button>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n</div>\r\n"],"mappings":";;;;;;;;;;AAMA,MAKaA,cAAc;EAKzBC,YAAoBC,IAAgB,EAAUC,MAAc,EAAUC,WAA+B;IAAjF,KAAAF,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;EAAsB;EAEvGC,QAAQA,CAAA;IACN,IAAI,CAAC,IAAI,CAACC,KAAK,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;MACjC;MACA,IAAI,CAACC,YAAY,GAAC,4BAA4B;MAC9CC,UAAU,CAAC,MAAK;QACd,IAAI,CAACD,YAAY,GAACE,SAAS;MAC7B,CAAC,EAAE,IAAI,CAAC;MACR;;IAKF,IAAIC,QAAQ,GAAc;MACxBL,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,QAAQ,EAAE,IAAI,CAACA;KAChB;IAEDK,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IAErB,IAAI,CAACP,WAAW,CAACU,cAAc,CAACH,QAAQ,CAAC;EAC3C;;AA3BWX,cAAc,C;mBAAdA,cAAc,EAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,kBAAA;AAAA;AAAdtB,cAAc,C;QAAdA,cAAc;EAAAuB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX3Bd,EAAA,CAAAgB,cAAA,aAA6B;MAEfhB,EAAA,CAAAiB,UAAA,sBAAAC,iDAAA;QAAA,OAAaH,GAAA,CAAAzB,QAAA,EAAU;MAAA,EAAC;MAC1BU,EAAA,CAAAgB,cAAA,eAAU;MACAhB,EAAA,CAAAmB,MAAA,YAAK;MAAAnB,EAAA,CAAAoB,YAAA,EAAS;MACtBpB,EAAA,CAAAgB,cAAA,aAAwB;MAC2BhB,EAAA,CAAAmB,MAAA,oBAAa;MAAAnB,EAAA,CAAAoB,YAAA,EAAQ;MACtEpB,EAAA,CAAAgB,cAAA,eAA2K;MAAvJhB,EAAA,CAAAiB,UAAA,2BAAAI,uDAAAC,MAAA;QAAA,OAAAP,GAAA,CAAAxB,KAAA,GAAA+B,MAAA;MAAA,EAAmB;MAAvCtB,EAAA,CAAAoB,YAAA,EAA2K;MAE7KpB,EAAA,CAAAgB,cAAA,cAAwB;MAC8BhB,EAAA,CAAAmB,MAAA,gBAAQ;MAAAnB,EAAA,CAAAoB,YAAA,EAAQ;MACpEpB,EAAA,CAAAgB,cAAA,gBAAoJ;MAA7HhB,EAAA,CAAAiB,UAAA,2BAAAM,wDAAAD,MAAA;QAAA,OAAAP,GAAA,CAAAvB,QAAA,GAAA8B,MAAA;MAAA,EAAsB;MAA7CtB,EAAA,CAAAoB,YAAA,EAAoJ;MAGtJpB,EAAA,CAAAgB,cAAA,iBAAmD;MAAAhB,EAAA,CAAAmB,MAAA,aAAK;MAAAnB,EAAA,CAAAoB,YAAA,EAAS;;;MAP3CpB,EAAA,CAAAwB,SAAA,GAAmB;MAAnBxB,EAAA,CAAAyB,UAAA,YAAAV,GAAA,CAAAxB,KAAA,CAAmB,mBAAAS,EAAA,CAAA0B,eAAA,IAAAC,GAAA;MAIhB3B,EAAA,CAAAwB,SAAA,GAAsB;MAAtBxB,EAAA,CAAAyB,UAAA,YAAAV,GAAA,CAAAvB,QAAA,CAAsB,mBAAAQ,EAAA,CAAA0B,eAAA,IAAAC,GAAA;;;;;;SDAhD1C,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}